definitions:
  domain.Owner:
    properties:
      created_at:
        type: string
      fullname:
        type: string
      owner_id:
        type: string
      updated_at:
        type: string
      username:
        type: string
      wa_number:
        type: string
    type: object
  domain.Shop:
    properties:
      created_at:
        type: string
      shop_description:
        type: string
      shop_id:
        type: string
      shop_name:
        type: string
      shop_photo_link:
        type: string
      updated_at:
        type: string
    type: object
  dto.OwnerRequest:
    properties:
      fullname:
        type: string
      password:
        type: string
      username:
        type: string
      wa_number:
        type: string
    type: object
  dto.ShopRequest:
    type: object
  ginlib.Response:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: string
      message:
        type: string
      status:
        type: string
    type: object
host: 0.0.0.0:5700
info:
  contact: {}
  description: This is FILKOM Canteen API Documentation
  title: FILKOM Canteen API
  version: "1.0"
paths:
  /api/v1/owners:
    get:
      description: Fetch All Owners From Database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ginlib.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.Owner'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginlib.Response'
      security:
      - ApiKeyAuth: []
      summary: Fetch All Owners
      tags:
      - Owners
    post:
      description: Register Owner to System
      parameters:
      - description: Owner Register Payload
        in: body
        name: OwnerPayload
        required: true
        schema:
          $ref: '#/definitions/dto.OwnerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ginlib.Response'
        "409":
          description: Username already exists
          schema:
            $ref: '#/definitions/ginlib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginlib.Response'
      security:
      - ApiKeyAuth: []
      summary: Register Owner
      tags:
      - Owners
  /api/v1/owners/{id}:
    delete:
      description: Delete Existing Owner
      parameters:
      - description: Owner ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ginlib.Response'
        "404":
          description: Item not found
          schema:
            $ref: '#/definitions/ginlib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginlib.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete Owner
      tags:
      - Owners
    get:
      description: Fetch Owner By ID From DB
      parameters:
      - description: Owner ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ginlib.Response'
            - properties:
                data:
                  $ref: '#/definitions/domain.Owner'
              type: object
        "404":
          description: Item not found
          schema:
            allOf:
            - $ref: '#/definitions/ginlib.Response'
            - properties:
                data:
                  $ref: '#/definitions/domain.Owner'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginlib.Response'
      security:
      - ApiKeyAuth: []
      summary: Fetch Owner By ID
      tags:
      - Owners
    put:
      description: Update Existing Owner
      parameters:
      - description: Owner Register Payload
        in: body
        name: OwnerPayload
        required: true
        schema:
          $ref: '#/definitions/dto.OwnerRequest'
      - description: Owner ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ginlib.Response'
        "404":
          description: Item not found
          schema:
            allOf:
            - $ref: '#/definitions/ginlib.Response'
            - properties:
                data:
                  $ref: '#/definitions/domain.Owner'
              type: object
        "409":
          description: Username already exists
          schema:
            $ref: '#/definitions/ginlib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginlib.Response'
      security:
      - ApiKeyAuth: []
      summary: Update Owner
      tags:
      - Owners
  /api/v1/shops:
    get:
      description: Fetch All Shops From Database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ginlib.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.Shop'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginlib.Response'
      security:
      - ApiKeyAuth: []
      summary: Fetch All Shops
      tags:
      - Shops
    post:
      description: Register Shop to System
      parameters:
      - description: Shop Register Payload
        in: body
        name: ShopPayload
        required: true
        schema:
          $ref: '#/definitions/dto.ShopRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ginlib.Response'
        "409":
          description: Username already exists
          schema:
            $ref: '#/definitions/ginlib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginlib.Response'
      security:
      - ApiKeyAuth: []
      summary: Register Shop
      tags:
      - Shops
  /api/v1/shops/{id}:
    delete:
      description: Delete Existing Shop
      parameters:
      - description: Shop ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ginlib.Response'
        "404":
          description: Item not found
          schema:
            $ref: '#/definitions/ginlib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginlib.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete Shop
      tags:
      - Shops
    get:
      description: Fetch Shop By ID From DB
      parameters:
      - description: Shop ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/ginlib.Response'
            - properties:
                data:
                  $ref: '#/definitions/domain.Shop'
              type: object
        "404":
          description: Item not found
          schema:
            allOf:
            - $ref: '#/definitions/ginlib.Response'
            - properties:
                data:
                  $ref: '#/definitions/domain.Shop'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginlib.Response'
      security:
      - ApiKeyAuth: []
      summary: Fetch Shop By ID
      tags:
      - Shops
    put:
      description: Update Existing Shop
      parameters:
      - description: Shop Register Payload
        in: body
        name: ShopPayload
        required: true
        schema:
          $ref: '#/definitions/dto.ShopRequest'
      - description: Shop ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ginlib.Response'
        "404":
          description: Item not found
          schema:
            allOf:
            - $ref: '#/definitions/ginlib.Response'
            - properties:
                data:
                  $ref: '#/definitions/domain.Shop'
              type: object
        "409":
          description: Username already exists
          schema:
            $ref: '#/definitions/ginlib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginlib.Response'
      security:
      - ApiKeyAuth: []
      summary: Update Shop
      tags:
      - Shops
securityDefinitions:
  ApiKeyAuth:
    description: 'API Key for accessing all endpoints. Type: Key TOKEN'
    in: header
    name: x-api-key
    type: apiKey
swagger: "2.0"
