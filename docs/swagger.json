{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is FILKOM Canteen API Documentation",
        "title": "FILKOM Canteen API",
        "contact": {},
        "version": "1.0"
    },
    "host": "filkom-api.dvnnfrr.my.id",
    "paths": {
        "/api/v1/menus": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetch All Menus From Database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menus"
                ],
                "summary": "Fetch All Menus",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shop ID",
                        "name": "shop_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginlib.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/domain.Menu"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "UserAuth": []
                    }
                ],
                "description": "Update Existing Menu",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menus (Admin and Owner)"
                ],
                "summary": "Update Menu",
                "parameters": [
                    {
                        "description": "Menu Update Payload",
                        "name": "MenuPayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MenuRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Menu ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "UserAuth": []
                    }
                ],
                "description": "Register Menu to System",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menus (Admin and Owner)"
                ],
                "summary": "Register Menu",
                "parameters": [
                    {
                        "description": "Menu Register Payload",
                        "name": "MenuPayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MenuRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "UserAuth": []
                    }
                ],
                "description": "Delete Existing Menu from System",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menus (Admin and Owner)"
                ],
                "summary": "Delete Menu",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Menu ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/menus/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetch Menu By ID From DB",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menus"
                ],
                "summary": "Fetch Menu By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Menu ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginlib.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.Menu"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/orders": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "UserAuth": []
                    }
                ],
                "description": "Fetch All Orders From Database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Fetch All Orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shop ID",
                        "name": "shop_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginlib.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/domain.Order"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "UserAuth": []
                    }
                ],
                "description": "Update Existing Order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders (Admin and Owner)"
                ],
                "summary": "Update Order",
                "parameters": [
                    {
                        "description": "Order Update Payload",
                        "name": "OrderPayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OrderRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "UserAuth": []
                    }
                ],
                "description": "Register Order to System",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Register Order",
                "parameters": [
                    {
                        "description": "Order Register Payload",
                        "name": "OrderPayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "UserAuth": []
                    }
                ],
                "description": "Delete Existing Order from System",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Delete Order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/orders/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "UserAuth": []
                    }
                ],
                "description": "Fetch Order By ID From DB",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Fetch Order By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginlib.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.Order"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/owners": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetch All Owners From Database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Owners"
                ],
                "summary": "Fetch All Owners",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginlib.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/domain.Owner"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Register Owner to System",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Owners"
                ],
                "summary": "Register Owner",
                "parameters": [
                    {
                        "description": "Owner Register Payload",
                        "name": "OwnerPayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OwnerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "409": {
                        "description": "Username already exists",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/owners/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetch Owner By ID From DB",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Owners"
                ],
                "summary": "Fetch Owner By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginlib.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.Owner"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginlib.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.Owner"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update Existing Owner",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Owners"
                ],
                "summary": "Update Owner",
                "parameters": [
                    {
                        "description": "Owner Register Payload",
                        "name": "OwnerPayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OwnerRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Owner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginlib.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.Owner"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "409": {
                        "description": "Username already exists",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete Existing Owner",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Owners"
                ],
                "summary": "Delete Owner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Owner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/shops": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "UserAuth": []
                    }
                ],
                "description": "Fetch All Shops From Database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shops (Admin only)"
                ],
                "summary": "Fetch All Shops",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginlib.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/domain.Shop"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "UserAuth": []
                    }
                ],
                "description": "Register Shop to System",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shops (Admin only)"
                ],
                "summary": "Register Shop",
                "parameters": [
                    {
                        "description": "Shop Register Payload",
                        "name": "ShopPayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ShopRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/shops/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "UserAuth": []
                    }
                ],
                "description": "Fetch Shop By ID From DB",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shops (Admin and Owner)"
                ],
                "summary": "Fetch Shop By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shop ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginlib.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.Shop"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginlib.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.Shop"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "UserAuth": []
                    }
                ],
                "description": "Update Existing Shop",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shops (Admin and Owner)"
                ],
                "summary": "Update Shop",
                "parameters": [
                    {
                        "description": "Shop Register Payload",
                        "name": "ShopPayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ShopRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Shop ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ginlib.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.Shop"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "409": {
                        "description": "Username already exists",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "UserAuth": []
                    }
                ],
                "description": "Delete Existing Shop",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shops (Admin only)"
                ],
                "summary": "Delete Shop",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shop ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/shops/{id}/owners/{ownerId}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "UserAuth": []
                    }
                ],
                "description": "Add Owner to Shop",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shops (Admin only)"
                ],
                "summary": "Add Owner to Shop",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shop ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Owner ID",
                        "name": "ownerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "404": {
                        "description": "Shop or Owner not found",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "UserAuth": []
                    }
                ],
                "description": "Remove Owner from Shop",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shops (Admin only)"
                ],
                "summary": "Remove Owner from Shop",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shop ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Owner ID",
                        "name": "ownerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ginlib.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Menu": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "menu_id": {
                    "type": "string"
                },
                "menu_name": {
                    "type": "string"
                },
                "menu_photo_link": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "shop_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.Order": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "menu_id": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                },
                "payment_proof_link": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "domain.Owner": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "wa_number": {
                    "type": "string"
                }
            }
        },
        "domain.Shop": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "shop_description": {
                    "type": "string"
                },
                "shop_id": {
                    "type": "string"
                },
                "shop_name": {
                    "type": "string"
                },
                "shop_photo_link": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.MenuRequest": {
            "type": "object"
        },
        "dto.OrderRequest": {
            "type": "object"
        },
        "dto.OwnerRequest": {
            "type": "object",
            "properties": {
                "fullname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "wa_number": {
                    "type": "string"
                }
            }
        },
        "dto.ShopRequest": {
            "type": "object"
        },
        "ginlib.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "API Key for accessing all endpoints. Type: Key TOKEN",
            "type": "apiKey",
            "name": "x-api-key",
            "in": "header"
        },
        "UserAuth": {
            "description": "API Key for accessing protected user and admin endpoints. Type: Bearer TOKEN",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}